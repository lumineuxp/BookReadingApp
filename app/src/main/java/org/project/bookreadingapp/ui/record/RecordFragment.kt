package org.project.bookreadingapp.ui.record

import android.Manifest
import android.Manifest.permission.RECORD_AUDIO
import android.Manifest.permission.WRITE_EXTERNAL_STORAGE
import android.content.Intent
//import android.R
import android.content.pm.PackageManager
import android.media.MediaPlayer
import android.media.MediaRecorder
import android.os.Bundle
import android.os.CountDownTimer
import android.os.Environment
import android.os.Handler
import android.util.Base64
import android.util.Log
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.ImageButton
import android.widget.ProgressBar
import android.widget.TextView
import android.widget.Toast
import androidx.core.content.ContextCompat
import androidx.core.view.isVisible
import androidx.fragment.app.Fragment
import androidx.lifecycle.ViewModelProvider
import org.project.bookreadingapp.Help
import org.project.bookreadingapp.Instructions
import org.project.bookreadingapp.R
import org.project.bookreadingapp.data.Embed
import org.project.bookreadingapp.data.Wav
import org.project.bookreadingapp.data.api.ApiService
//import androidx.test.core.app.ApplicationProvider.getApplicationContext
import org.project.bookreadingapp.databinding.FragmentRecordBinding
import org.project.bookreadingapp.ui.home.DialogHome
import retrofit2.Call
import retrofit2.Callback
import retrofit2.Response
import java.io.File
import java.io.FileWriter
import java.io.IOException
import java.io.PrintWriter


class RecordFragment : Fragment(), MediaRecorder.OnInfoListener {

    private val PERMISSIONS_REQUEST_CODE = 123
    // Initializing all variables..
    private var startTV: TextView? = null
    private var stopTV: TextView? = null
    private var playTV: TextView? = null
    private var stopplayTV: TextView? = null
    private var statusTV: TextView? = null
    private var isRecording: Boolean = false
    private var isPlaying : Boolean = false
    private var txtExample : TextView? = null
    private var progBarCircle : ProgressBar? = null
    private var i = 0
    private val handler = Handler()
    //private var isButtonVisible = false
    private var isStartTVVisible = true
    private var isPlayTVVisible = false
    private var isPlayOrgVisible = false
    private var isRecAgainVisible = false
    private var isRecordLBVisible = true
    private var isPlaySynLBVisible = false
    private var isPlayOrgLBVisible = false
    private var isRecAgainLBVisible = false
    //private val buttonStates: MutableMap<Int, Boolean> = mutableMapOf()

    // creating a variable for media recorder object class.
    private var mRecorder: MediaRecorder? = null

    // creating a variable for mediaplayer class
    private var mPlayer: MediaPlayer? = null

    // string variable is created for storing a file name
    private var mFileName: String? = null

    //wav in base64 create when record and use when call API
    private var wavBase64 : String? = null
    // constant for storing audio permission
    //val REQUEST_AUDIO_PERMISSION_CODE = 1


    private var _binding: FragmentRecordBinding? = null

    // This property is only valid between onCreateView and
    // onDestroyView.
    private val binding get() = _binding!!

    private val fileExamplePath = "/sdcard/MyApp/audio/example.mp3"

    override fun onCreateView(
        inflater: LayoutInflater,
        container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View {

        savedInstanceState?.let {
            isStartTVVisible = it.getBoolean("startTVButtonState")
            isPlayTVVisible = it.getBoolean("playTVButtonState")
            isPlayOrgVisible = it.getBoolean("playOrgButtonState")
            isRecAgainVisible = it.getBoolean("recAgainButtonState")
            isRecordLBVisible = it.getBoolean("recordLabelState")
            isPlaySynLBVisible = it.getBoolean("playSynLabelState")
            isPlayOrgLBVisible = it.getBoolean("playOrgLabelState")
            isRecAgainLBVisible = it.getBoolean("recAgainLabelState")
//            for (buttonId in buttonStates.keys) {
//                val buttonState = it.getBoolean(buttonId.toString())
//                buttonStates[buttonId] = buttonState
//            }
        }

        val recordViewModel =
            ViewModelProvider(this).get(RecordViewModel::class.java)

        _binding = FragmentRecordBinding.inflate(inflater, container, false)
        val root: View = binding.root

//        val textView: TextView = binding.textRecord
//        recordViewModel.text.observe(viewLifecycleOwner) {
//            textView.text = it
//        }

        // initialize all variables with their layout items.
        val statusTV: TextView = binding.idTVstatus
        val startTV: ImageButton = binding.recordBtn
        //val recordingTV: ImageButton = binding.recordingBtn
        val playTV: ImageButton = binding.playBtn
        val stopplayTV: ImageButton = binding.stopBtn
        val playOrg: ImageButton = binding.playOrgBtn
        val recordAgain: ImageButton = binding.recAgainBtn
        val progressBar: ProgressBar = binding.progressBar
        val txtExample: TextView = binding.textExample
        val progBarCircle: ProgressBar = binding.pBar
        val lbRecAgain: TextView = binding.lbRecAgain
        val lbRecord: TextView = binding.lbRecord
        val lbPlayOrg: TextView = binding.lbPlayOrg
        val lbPlaySyn: TextView = binding.lbPlaySyn
        val lbStop: TextView = binding.lbStop
        val infoButton: ImageButton = binding.infoBtn

//        var hasVector = hasVector()

        if(hasVector()){

            playTV?.visibility = View.VISIBLE
            playOrg?.visibility = View.VISIBLE
            recordAgain?.visibility = View.VISIBLE
            lbRecord.visibility = View.GONE
            lbPlaySyn.visibility = View.VISIBLE
            lbPlayOrg.visibility = View.VISIBLE
            lbRecAgain.visibility = View.VISIBLE

        }else{
            startTV.isVisible = isStartTVVisible
            playTV.isVisible = isPlayTVVisible
            playOrg.isVisible = isPlayOrgVisible
            recordAgain.isVisible = isRecAgainVisible
            lbRecord.isVisible = isRecordLBVisible
            lbPlaySyn.isVisible = isPlaySynLBVisible
            lbPlayOrg.isVisible = isPlayOrgLBVisible
            lbRecAgain.isVisible = isRecAgainLBVisible
        }


//        startTV.isVisible = buttonStates[startTV.id] ?: true
//        playTV.isVisible = buttonStates[playTV.id] ?: false
//        playOrg.isVisible = buttonStates[playOrg.id] ?: false
//        recordAgain.isVisible = buttonStates[recordAgain.id] ?: false

        infoButton.setOnClickListener {
            val intent = Intent(activity, Help::class.java)
            startActivity(intent)
        }

        startTV?.setOnClickListener { // start recording method will
            // start the recording of audio.
//            startTV?.visibility = View.GONE
//            recordingTV?.visibility = View.VISIBLE
            if(isRecording){
                //startTV?.isEnabled = false
                startTV.isClickable = false
                //stop record
                //pauseRecording()
                //startTV.setImageResource(R.drawable.ic_baseline_mic_gray_65)
                //isRecording = false
            }else{
                //start record
                if (CheckPermissions()) {
                    startRecording()
                    startTV.setImageResource(R.drawable.ic_baseline_mic_red_65)
                    isRecording = true

                    val countDownTimer = object : CountDownTimer(10000, 100) {
                        override fun onTick(millisUntilFinished: Long) {
                            // Update the progress bar and display the current value
                            val progress = (10000 - millisUntilFinished) / 100
                            progressBar.progress = progress.toInt()

                            // setting current progress to the textview
                            // txtView!!.text = progress.toString() + "/" + progressBar.max
                        }

                        override fun onFinish() {
                            //เผื่อใช้
                            // mTextField.setText("done!")
                            isRecording = false
                            statusTV?.text = "Finished!"
                            //recordingTV?.visibility = View.GONE
                            startTV.setImageResource(R.drawable.ic_baseline_mic_gray_65)
                            startTV?.visibility = View.GONE
                            //startTV?.visibility = View.GONE
                            playTV?.visibility = View.VISIBLE
                            playOrg?.visibility = View.VISIBLE
                            recordAgain?.visibility = View.VISIBLE
                            progressBar.visibility = View.GONE
                            lbRecord.visibility = View.GONE
                            lbPlaySyn.visibility = View.VISIBLE
                            lbPlayOrg.visibility = View.VISIBLE
                            lbRecAgain.visibility = View.VISIBLE

//                            deleteFileOrFolder( File(context?.filesDir, "vector.txt"))
                            deleteFileOrFolder(File(fileExamplePath))

                        }
                    }

                    countDownTimer.start()
                    progressBar.visibility = View.VISIBLE
                    statusTV?.text = "Recording..."
                } else {
                    // if audio recording permissions are
                    // not granted by user below method will
                    // ask for runtime permission for mic and storage.
                    // Request permissions
                       RequestPermissions()
                }
                isStartTVVisible = startTV.isVisible
                isPlayTVVisible = playTV.isVisible
                isPlayOrgVisible = playOrg.isVisible
                isRecAgainVisible = recordAgain.isVisible
                isRecordLBVisible = lbRecord.isVisible
                isPlaySynLBVisible = lbPlaySyn.isVisible
                isPlayOrgLBVisible = lbPlayOrg.isVisible
                isRecAgainLBVisible = lbRecAgain.isVisible
            }
        }

//        stopTV?.setOnClickListener { // pause Recording method will
//            // pause the recording of audio.
//            stopTV?.visibility = View.GONE
//            playTV?.visibility = View.VISIBLE
//            pauseRecording()
//        }

        playOrg?.setOnClickListener {
            // play original voice from user
            if (!isPlaying && mFileName != null){
                isPlaying = true
                playOrg.setImageResource(R.drawable.ic_baseline_record_voice_over_purple_40)
                playAudio()
                statusTV?.text = "Playing your original voice..."
                txtExample.setText(R.string.text_example_thai)
                recordAgain.isClickable = false
                playTV.isClickable = false

                mPlayer!!.setOnCompletionListener {
                    // เมื่อเล่นเสียงเสร็จสิ้น
                    playOrg.setImageResource(R.drawable.ic_baseline_record_voice_over_24)
                    isPlaying = false
                    pausePlaying()
                    statusTV?.text = "Finished!"
                    recordAgain.isClickable = true
                    playTV.isClickable = true
                }

            }else{
                isPlaying = false
                playOrg.setImageResource(R.drawable.ic_baseline_record_voice_over_24)
                pausePlaying()
                statusTV?.text = "Finished!"
                recordAgain.isClickable = true
                playTV.isClickable = true
            }
            isStartTVVisible = startTV.isVisible
            isPlayTVVisible = playTV.isVisible
            isPlayOrgVisible = playOrg.isVisible
            isRecAgainVisible = recordAgain.isVisible
            isRecordLBVisible = lbRecord.isVisible
            isPlaySynLBVisible = lbPlaySyn.isVisible
            isPlayOrgLBVisible = lbPlayOrg.isVisible
            isRecAgainLBVisible = lbRecAgain.isVisible
        }

        playTV?.setOnClickListener { // play audio method will play
            // the audio which we have recorded
            // ปุ่ม play อันกลาง (playTV) ที่จะเอาไว้ใช้เล่นเสียงที่สังเคราะห์แล้ว
            playTV?.visibility = View.GONE

            //ตอนกดให้มีโหลดหรือขึ้นอะไรสักอย่างก่อนเปลี่ยนเป็นปุ่ม stop เพราะต้องส่งเสียงไปสังเคราะห์

            //อันใหม่
            //val newButtonState = !(buttonStates[startTV.id] ?: false)
            val synFile = File(fileExamplePath)
            if (synFile.exists()) {
                // file exists
                statusTV?.text = "Playing synthesis voice..."
                stopplayTV?.visibility = View.VISIBLE
                lbStop.visibility = View.VISIBLE
                lbPlaySyn.visibility = View.GONE
                txtExample.setText(R.string.text_example_eng)
                playMedia(fileExamplePath)
                recordAgain.isClickable = false
                playOrg.isClickable = false
                mPlayer!!.setOnCompletionListener {
                    // เมื่อเล่นเสียงเสร็จสิ้น
                    stopplayTV?.visibility = View.GONE
                    lbStop.visibility = View.GONE
                    playTV.visibility = View.VISIBLE
                    lbPlaySyn.visibility = View.VISIBLE
                    isPlaying = false
                    pausePlaying()
                    statusTV?.text = "Finished!"
                    recordAgain.isClickable = true
                    playOrg.isClickable = true
//                    isButtonVisible = playTV.isVisible
//                    buttonStates[startTV.id] = startTV.isVisible
//                    buttonStates[playTV.id] = playTV.isVisible
//                    buttonStates[playOrg.id] = playOrg.isVisible
//                    buttonStates[recordAgain.id] = recordAgain.isVisible
                }
            } else {
                // file does not exist
                recordAgain.visibility = View.GONE
                playOrg.visibility = View.GONE
                lbRecAgain.visibility = View.GONE
                lbPlaySyn.visibility = View.GONE
                lbPlayOrg.visibility = View.GONE
                statusTV?.text = "Synthesizing..."
                progBarCircle.visibility = View.VISIBLE
                playAudioBase64()
//                isButtonVisible = playTV.isVisible
//                buttonStates[startTV.id] = startTV.isVisible
//                buttonStates[playTV.id] = playTV.isVisible
//                buttonStates[playOrg.id] = playOrg.isVisible
//                buttonStates[recordAgain.id] = recordAgain.isVisible
            }
            isStartTVVisible = startTV.isVisible
            isPlayTVVisible = playTV.isVisible
            isPlayOrgVisible = playOrg.isVisible
            isRecAgainVisible = recordAgain.isVisible
            isRecordLBVisible = lbRecord.isVisible
            isPlaySynLBVisible = lbPlaySyn.isVisible
            isPlayOrgLBVisible = lbPlayOrg.isVisible
            isRecAgainLBVisible = lbRecAgain.isVisible
        }

        stopplayTV?.setOnClickListener { // pause play method will
            // pause the play of audio
            statusTV?.text = "Finished!"
            stopplayTV?.visibility = View.GONE
            lbStop.visibility = View.GONE
            playTV?.visibility = View.VISIBLE
            lbPlaySyn.visibility = View.VISIBLE
            isPlaying = false
            pausePlaying()
            recordAgain.isClickable = true
            playOrg.isClickable = true
            isStartTVVisible = startTV.isVisible
            isPlayTVVisible = playTV.isVisible
            isPlayOrgVisible = playOrg.isVisible
            isRecAgainVisible = recordAgain.isVisible
            isRecordLBVisible = lbRecord.isVisible
            isPlaySynLBVisible = lbPlaySyn.isVisible
            isPlayOrgLBVisible = lbPlayOrg.isVisible
            isRecAgainLBVisible = lbRecAgain.isVisible
        }

        recordAgain?.setOnClickListener {
            // back to the beginning กลับไปเริ่มอัดใหม่ อุอิ
            // ค่อนข้างจะมั่วซั่ว อาจเจอบัคได้ นี่คือคำเตือน 555555555555555



                // File successfully deleted
                txtExample.setText(R.string.text_example_thai)
                playTV?.visibility = View.GONE
                stopplayTV?.visibility = View.GONE
                playOrg?.visibility = View.GONE
                recordAgain?.visibility = View.GONE
                statusTV?.text = "Status"
                startTV?.visibility = View.VISIBLE
                startTV.isClickable = true
                lbRecAgain.visibility = View.GONE
                lbPlaySyn.visibility = View.GONE
                lbPlayOrg.visibility = View.GONE
                lbRecord.visibility = View.VISIBLE


            isStartTVVisible = startTV.isVisible
            isPlayTVVisible = playTV.isVisible
            isPlayOrgVisible = playOrg.isVisible
            isRecAgainVisible = recordAgain.isVisible
            isRecordLBVisible = lbRecord.isVisible
            isPlaySynLBVisible = lbPlaySyn.isVisible
            isPlayOrgLBVisible = lbPlayOrg.isVisible
            isRecAgainLBVisible = lbRecAgain.isVisible
        }

//        savedInstanceState?.run {
//            //playTV = getString(PLAYTV_BUTTON)
//            isButtonVisible = getBoolean(PLAYTV_BUTTON)
//            isRecAgainVisible = getBoolean(RECAG_BUTTON)
//        }

        return root
    }

    override fun onSaveInstanceState(outState: Bundle) {
        /* ... */
        super.onSaveInstanceState(outState)
        //outState.putString(PLAYTV_BUTTON, playTV)
//        outState.putBoolean(PLAYTV_BUTTON, isButtonVisible)
//        outState.putBoolean(RECAG_BUTTON, isRecAgainVisible)
//        for ((buttonId, buttonState) in buttonStates) {
//            outState.putBoolean(buttonId.toString(), buttonState)
//        }
        outState.putBoolean("startTVButtonState", isStartTVVisible)
        outState.putBoolean("playTVButtonState", isPlayTVVisible)
        outState.putBoolean("playOrgButtonState", isPlayOrgVisible)
        outState.putBoolean("recAgainButtonState", isRecAgainVisible)
    }

    private fun startRecording() {
        // we are here initializing our filename variable
        // with the path of the recorded audio file.
        mFileName = Environment.getExternalStorageDirectory().absolutePath
        mFileName += "/AudioRecording.mp3"
        //mFileName = "/sdcard/AudioRecording.mp3"

        // below method is used to initialize
        // the media recorder class
        mRecorder = MediaRecorder()

        // below method is used to set the audio
        // source which we are using a mic.
        mRecorder?.setAudioSource(MediaRecorder.AudioSource.MIC)

        // below method is used to set
        // the output format of the audio.
        mRecorder?.setOutputFormat(MediaRecorder.OutputFormat.THREE_GPP)

        // below method is used to set the
        // audio encoder for our recorded audio.
        mRecorder?.setAudioEncoder(MediaRecorder.AudioEncoder.AMR_NB)

        mRecorder?.setMaxDuration(10000)

        // below method is used to set the
        // output file location for our recorded audio
        mRecorder?.setOutputFile(mFileName)
        try {
            // below method will prepare
            // our audio recorder class
            mRecorder?.prepare()
        } catch (e: IOException) {
            e.printStackTrace()
            Log.e("TAG", "prepare() failed")
        }
        // start method will start
        // the audio recording.
        mRecorder?.start()
        //statusTV?.text = "Recording Started"

        mRecorder?.setOnInfoListener(this)

//            mRecorder?.release()
//            mRecorder = null
//            statusTV?.text = "Recording Stopped"
    }

    private fun playAudioBase64() {
        var emb =  ""
//        var embth = ""
        var wav = Wav()
        wavBase64 = convertAudioToBase64(mFileName.toString())
        Log.i("base64", wavBase64!!)
        wav.wav = wavBase64
//        wav.wav = embth

        callEmbedAPI(wav)

    }

    private fun callEmbedAPI(wav : Wav){
        val apiService = ApiService()
        val exSynPath = "/sdcard/MyApp/audio/example.mp3"
        val call = apiService.getEmbed(wav)
        val txtExample: TextView = binding.textExample
        val progBarCircle: ProgressBar = binding.pBar
        val stopplayTV: ImageButton = binding.stopBtn
        val statusTV: TextView = binding.idTVstatus
        val playOrg: ImageButton = binding.playOrgBtn
        val recordAgain: ImageButton = binding.recAgainBtn
        val playTV: ImageButton = binding.playBtn
        val lbRecAgain: TextView = binding.lbRecAgain
        val lbPlaySyn: TextView = binding.lbPlaySyn
        val lbPlayOrg: TextView = binding.lbPlayOrg
        val lbStop: TextView = binding.lbStop

        call.enqueue(object: Callback<Embed> {

            override fun onResponse(call: Call<Embed>, response: Response<Embed>) {
                if (response.isSuccessful) {
                    var jsonEmbed = response.body() // Use it or ignore it
                    Log.i("API Get Embed", jsonEmbed?.exSynVoice.toString());
                    val synvoiceBase64 = jsonEmbed!!.exSynVoice
                    Toast.makeText(context, "Successfully.", Toast.LENGTH_SHORT).show()

                    //save syntyhesize voice
                    convertBase64ToAudio(synvoiceBase64, exSynPath)

                    //save embed vector to vector.txt
                    var embedVector = jsonEmbed.embed
                    saveVector(embedVector)

                    //หลังจากได้ response กลับมาแล้ว ให้เป็นปุ่ม stop ขึ้น --> ก็คือย้ายโค้ดบรรทัดนั้นมาแปะไว้ตรงนี้ แล้วอย่าลืมทำปุ่มให้เข้าถึงได้
                    //ใส่โค้ดตรงนิ
                    statusTV?.text = "Playing synthesis voice..."
                    progBarCircle?.visibility = View.GONE
                    stopplayTV?.visibility = View.VISIBLE
                    lbStop.visibility = View.VISIBLE
                    lbPlaySyn.visibility = View.GONE
                    txtExample?.setText(R.string.text_example_eng)
                    recordAgain.visibility = View.VISIBLE
                    playOrg.visibility = View.VISIBLE
                    lbRecAgain.visibility = View.VISIBLE
                    lbPlayOrg.visibility = View.VISIBLE
                    recordAgain.isClickable = false
                    playOrg.isClickable = false

                    //play synthesize voice
                    playMedia(exSynPath)
                    mPlayer!!.setOnCompletionListener {
                        // เมื่อเล่นเสียงเสร็จสิ้น
                        stopplayTV?.visibility = View.GONE
                        lbStop.visibility = View.GONE
                        playTV.visibility = View.VISIBLE
                        lbPlaySyn.visibility = View.VISIBLE
                        isPlaying = false
                        pausePlaying()
                        statusTV?.text = "Finished!"
                        recordAgain.isClickable = true
                        playOrg.isClickable = true
                    }

                } else {
                    Log.e("API Get Embed" , response.toString())

                }
            }

            override fun onFailure(call: Call<Embed>, t: Throwable) {
                Log.e("API Get Embed Failure" , t.message + " "+ t.cause)
                callEmbedAPI(wav)
            }
        })
    }

    private fun saveVector(vector:String){
        val fileName = "vector.txt"
        val file = File(context?.filesDir, fileName)

        if (!file.exists()) {
            // The file already exists, so overwrite it
            val fileWriter = FileWriter(file, false)
            val printWriter = PrintWriter(fileWriter)

            printWriter.println(vector)

            printWriter.close()
            fileWriter.close()
        } else {
            // The file does not exist, so create a new file and write to it
            file.createNewFile()

            val fileWriter = FileWriter(file)
            val printWriter = PrintWriter(fileWriter)

            printWriter.println(vector)

            printWriter.close()
            fileWriter.close()
        }

        deleteFileOrFolder(File(Environment.getExternalStorageDirectory().absolutePath + "/MyApp/audio/story"))

    }
    private fun hasVector() : Boolean {
        val fileName = "vector.txt"
        val file = File(context?.filesDir, fileName)
        var status:Boolean

        if (file.exists()) {
            // Now "str" contains the contents of the file
            status = true
        } else {
            // The file does not exist
            status = false
        }

        return status
    }

    private fun convertBase64ToAudio(base64String: String, filePath: String) {
        val audioData = Base64.decode(base64String, Base64.DEFAULT)
        val file = File(filePath)

        if(file.exists()){

        }else{
            file.parentFile.mkdirs()
            file.writeBytes(audioData)
        }

    }
    private fun convertAudioToBase64(filePath: String): String {
        val file = File(filePath)
        val audioData = file.readBytes()
        return Base64.encodeToString(audioData, Base64.DEFAULT)
    }
    private fun playMedia(filePath: String){
        mPlayer = MediaPlayer()
        try {
            // below method is used to set the
            // data source which will be our file name
            mPlayer?.setDataSource(filePath)

            // below method will prepare our media player
            mPlayer?.prepare()

            // below method will start our media player.
            mPlayer?.start()

        } catch (e: IOException) {
            Log.e("TAG", e.toString())
        }
    }


    override fun onInfo(mRecorder: MediaRecorder, what: Int, p2: Int) {
        if (what == MediaRecorder.MEDIA_RECORDER_INFO_MAX_DURATION_REACHED) {
            mRecorder?.stop()
            mRecorder?.release()
            statusTV?.text = "Recording Stopped"
        }
    }

    override fun onRequestPermissionsResult(
        requestCode: Int,
        permissions: Array<out String>,
        grantResults: IntArray
    ) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults)

        when (requestCode) {
            PERMISSIONS_REQUEST_CODE -> {
                // Check if all permissions are granted
                val allPermissionsGranted = grantResults.all { it == PackageManager.PERMISSION_GRANTED }

                if (allPermissionsGranted) {
                    // Permissions granted, do whatever you want here
                    Toast.makeText(
                        requireContext(),
                        "Permission Granted",
                        Toast.LENGTH_LONG
                    ).show()
                } else {
                    // Permissions denied, show an error message or something
                    val fragmentManager = childFragmentManager // Replace with your FragmentManager instance
                    val dialogHome = DialogHome()
                    dialogHome.show(fragmentManager,"MyCustomFragment")
                }
            }
        }
    }


    fun CheckPermissions(): Boolean {

        val result = ContextCompat.checkSelfPermission(
            requireContext(),WRITE_EXTERNAL_STORAGE
        )
        val result1 = ContextCompat.checkSelfPermission(
            requireContext(),RECORD_AUDIO
        )

        return result == PackageManager.PERMISSION_GRANTED && result1 == PackageManager.PERMISSION_GRANTED
//        return result == PackageManager.PERMISSION_GRANTED
    }

    private fun RequestPermissions() {
        // this method is used to request the
        // permission for audio recording and storage.
        requestPermissions(arrayOf(RECORD_AUDIO, WRITE_EXTERNAL_STORAGE),
            PERMISSIONS_REQUEST_CODE)
//        requestPermissions(arrayOf(RECORD_AUDIO),
//            REQUEST_AUDIO_PERMISSION_CODE)

//        ActivityCompat.requestPermissions(
//            this@MainActivity,
//            arrayOf(RECORD_AUDIO, WRITE_EXTERNAL_STORAGE),
//            REQUEST_AUDIO_PERMISSION_CODE
//        )
    }

    fun playAudio() {
//        stopTV?.setBackgroundColor(resources.getColor(org.project.bookreadingapp.R.color.gray))
//        startTV?.setBackgroundColor(resources.getColor(org.project.bookreadingapp.R.color.purple_200))
//        playTV?.setBackgroundColor(resources.getColor(org.project.bookreadingapp.R.color.gray))
//        stopplayTV?.setBackgroundColor(resources.getColor(org.project.bookreadingapp.R.color.purple_200))

        // for playing our recorded audio
        // we are using media player class.
        mPlayer = MediaPlayer()
        try {
            // below method is used to set the
            // data source which will be our file name
            mPlayer?.setDataSource(mFileName)

            // below method will prepare our media player
            mPlayer?.prepare()

            // below method will start our media player.
            mPlayer?.start()
            statusTV?.text = "Recording Started Playing"
        } catch (e: IOException) {
            Log.e("TAG", "prepare() failed")
        }
    }

    fun pauseRecording() {

        // below method will stop
        // the audio recording.
        mRecorder?.stop()

        // below method will release
        // the media recorder class.
        mRecorder?.release()
        mRecorder = null
        statusTV?.text = "Recording Stopped"
    }

    fun pausePlaying() {
        // this method will release the media player
        // class and pause the playing of our recorded audio.
        mPlayer?.release()
        mPlayer = null
        isPlaying = false
        statusTV?.text = "Recording Play Stopped"
    }

    fun deleteFileOrFolder(fileOrFolder: File): Boolean {
        var success = true
        if (fileOrFolder.isDirectory) {
            val files = fileOrFolder.listFiles()
            if (files != null) {
                for (file in files) {
                    success = deleteFileOrFolder(file) && success
                }
            }
        }
        success = fileOrFolder.delete() && success
        return success
    }


    override fun onDestroyView() {
        super.onDestroyView()
        _binding = null
    }

}